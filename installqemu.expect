###############################################
#
# Install alpine with docker in qemu aarch64
#

# Wait till system is ready
set timeout -1

# Load answerfile
set answerfile [exec cat ./answerfile]

# Create the install dir
spawn mkdir -p "$env(INSTALLATION_DIR)"

# Copy the scripts to the install dir
expect "$"
spawn cp start-qemu.sh "$env(INSTALLATION_DIR)"

expect "$"
spawn cp ssh-qemu.sh "$env(INSTALLATION_DIR)"

spawn curl -v -L -o "$env(INSTALLATION_DIR)/alpine.iso" -C - $env(ALPINE_ISO_URL)
expect "left intact"

spawn rm -f "$env(INSTALLATION_DIR)/qemukey" "$env(INSTALLATION_DIR)/qemukey.pub"
expect "$"

spawn ssh-keygen -b 2048 -t rsa -N "" -f "$env(INSTALLATION_DIR)/qemukey"
expect "\[SHA256\]"

set qemukey [exec cat "$env(INSTALLATION_DIR)/qemukey.pub"]

#
# Install the system
#

spawn rm -f "$env(INSTALLATION_DIR)/alpine.img"
spawn qemu-img create -f qcow2 "$env(INSTALLATION_DIR)/alpine.img" $env(DISK_SIZE)
expect "alpine.img"

sleep 5
spawn qemu-system-aarch64 \
    -machine virt \
    -cpu cortex-a72 \
    -m 2048 \
    -smp 8 \
    -drive if=pflash,format=raw,read-only=on,file=$env(PREFIX)/share/qemu/edk2-aarch64-code.fd \
    -netdev user,id=n1,dns=8.8.8.8,hostfwd=tcp::2222-:22 \
    -device virtio-net,netdev=n1 \
    -cdrom "$env(INSTALLATION_DIR)/alpine.iso" \
    -nographic \
    "$env(INSTALLATION_DIR)/alpine.img"

set qemuID $spawn_id

expect "login:"
send "root\r"

# dns fix
expect ":~#"
send "echo 'nameserver 8.8.8.8' > /etc/resolv.conf\r"

expect ":~#"
send "sed -i 's/^#RESOLV_CONF=\"no\"/RESOLV_CONF=\"no\"/' /etc/udhcpc/udhcpc.conf\r"

# disable ipv6
expect "#"
send "echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.conf\r"
expect "#"
send "sysctl -p\r"

expect ":~#"
send "setup-interfaces\r"

expect "\[eth0\]"
send "\r"

expect "\[dhcp\]"
send "\r"

expect "\[no\]"
send "\r"

expect ":~#"
send "ifup eth0\r"

expect ":~#"
send "vi /root/answerfile\r"
sleep 3
send "i"
sleep 3
send "$answerfile\r"
# Escape
sleep 3
send [format "%c(" 27]
sleep 3
send ":wq\r"
sleep 3


send "cat /root/answerfile\r"
sleep 3

expect ":~#"
send "setup-alpine -f answerfile\r"

expect "password:"
send "$env(ROOT_PASSWORD)\n"

expect "password:"
send "$env(ROOT_PASSWORD)\n"

expect "Setup a user?"
send "\r"

expect "Erase the above disk"
send "y\r"

expect "No error reported."

expect "Please reboot"

send "poweroff\r"
expect ":~#"

# back on console
expect "$"

#
# setup the system
#
spawn qemu-system-aarch64 \
    -machine virt \
    -cpu cortex-a72 \
    -m 2048 \
    -smp 8 \
    -drive if=pflash,format=raw,read-only=on,file=$env(PREFIX)/share/qemu/edk2-aarch64-code.fd \
    -netdev user,id=n1,dns=8.8.8.8,hostfwd=tcp::2222-:22 \
    -device virtio-net,netdev=n1 \
    -cdrom "$env(INSTALLATION_DIR)/alpine.iso" \
    -nographic \
    "$env(INSTALLATION_DIR)/alpine.img"

set qemuID $spawn_id

expect "login:"
send "root\r"

expect "Password:"
send "$env(ROOT_PASSWORD)\n"

# only allow login with ssh key
expect "#"
send "sed -i -E 's/^#PermitRootLogin prohibit-password/PermitRootLogin prohibit-password/' /etc/ssh/sshd_config\r"

expect "#"
send "service sshd start\r"

# dns fix
expect "#"
send "echo 'nameserver 8.8.8.8' > /etc/resolv.conf\r"

expect "#"
send "sed -i 's/^#RESOLV_CONF=\"no\"/RESOLV_CONF=\"no\"/' /etc/udhcpc/udhcpc.conf\r"

# enable repo
expect "#"
send "sed -i 's|^#http://|http://|' /etc/apk/repositories\r"

expect "#"
send "apk update && apk add docker ip6tables\r"

expect "#"
send "service docker start\r"

expect "#"
send "rc-update add docker\r"

expect "#"
send "mkdir -p /root/.ssh\r"

expect "#"
send "chmod 700 /root/.ssh\r"

expect "#"
send "echo $qemukey >> /root/.ssh/authorized_keys\r"

expect "#"
send "poweroff\r"
expect ":~#"

# back on console
expect "$"
